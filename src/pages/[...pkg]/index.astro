---
import Layout from "../../layouts/Layout.astro";
import PackageCard from "../../components/PackageCard.astro";
import PackageDownloads from "../../components/PackageDownloads.tsx";
import Metadata from "../../components/package/Metadata.astro";
import Readme from "../../components/package/Readme.astro";
import Versions from "../../components/package/Versions.astro";
import Dependencies from "../../components/package/Dependencies.astro";
import Command from "../../components/package/Command.astro";
import Scripts from "../../components/package/Scripts.astro";
import External from "../../components/package/External.astro";
import type { PackageGeneral, PackageDetailed } from "../../types/Package.ts";
import error from "../../utils/error.ts";

interface Props {
  pkg: string;
}

const { pkg } = Astro.params;
const tab = Astro.url.searchParams.get("tab") || "1";

// Get Version or use latest
let version = "latest";
const list = pkg?.split("/") as string[];

list.forEach((e) => {
  if (/^v\d+./.test(e)) {
    version = e.substring(1);
  }
});

const packageName = pkg?.replace(`/v${version}`, "");
const [general, detailed] = await Promise.all([
  fetch(`https://registry.npmjs.com/${packageName}`).then(
    (res) => res.json() as Promise<PackageGeneral>,
  ),
  fetch(`https://registry.npmjs.com/${packageName}/${version}`).then(
    (res) => res.json() as Promise<PackageDetailed>,
  ),
]);

if (general.error) return await error(404);
---

<Layout
  title={`${detailed.name}@${detailed.version}` || "Unknow"}
  description={detailed.description}
>
  <main class="items-center overflow-x-hidden md:p-4">
    <div>
      <PackageCard
        name={detailed.name}
        description={detailed.description}
        version={detailed.version}
        keywords={detailed.keywords || []}
        types={detailed.types}
      />

      <br />

      <div class="md:flex md:space-x-3">
        <div class="md:w-3/4">
          <div
            class="flex items-center space-x-3 overflow-x-auto whitespace-nowrap rounded-t-2xl bg-surface p-3"
          >
            <a
              href={`/${pkg}`}
              class={`font-bold bg-background p-2 pl-4 pr-4 rounded-xl ${
                tab === "1" ? "text-purple-400" : "text-white"
              }`}
            >
              Readme
            </a>
            <a
              href={`/${pkg}?tab=2`}
              class={`font-bold bg-background p-2 pl-4 pr-4 rounded-xl ${
                tab === "2" ? "text-purple-400" : "text-white"
              }`}
            >
              Versions
            </a>
            <a
              href={`/${pkg}?tab=3`}
              class={`font-bold bg-background p-2 pl-4 pr-4 rounded-xl ${
                tab === "3" ? "text-purple-400" : "text-white"
              }`}
            >
              Dependencies
            </a>

            <a
              href={`/${pkg}?tab=4`}
              class={`font-bold bg-background p-2 pl-4 pr-4 rounded-xl ${
                tab === "4" ? "text-purple-400" : "text-white"
              }`}
            >
              Scripts
            </a>
          </div>

          {
            tab === "1" ? (
              <Readme {general} />
            ) : tab === "2" ? (
              <Versions {detailed} {general} />
            ) : tab === "3" ? (
              <Dependencies {detailed} />
            ) : (
              <Scripts {detailed} />
            )
          }
        </div>

        <div class="mt-3 rounded-2xl bg-surface pb-2 pl-4 pr-4 md:mt-0 md:w-1/4">
          <div class="pt-5">
            <Command {detailed} {general} />
          </div>
          <External {detailed} />
          <Metadata {detailed} {general} />
          <div>
            <h2>Downloads</h2>
            <PackageDownloads client:only name={detailed.name} />
            <noscript>
              <a href={`/${pkg}/downloads`}>Downloads Tab Here</a>
            </noscript>
          </div>
          <div>
            <h2>Maintainers</h2>
            <div>
              {
                detailed.maintainers
                  ? detailed.maintainers.map((user) => {
                      const m = detailed.maintainers?.length;

                      if (m && m < 11) {
                        return (
                          <a class="text-white no-underline" href={`/~${user.name}`}>
                            <div class="mb-2 flex items-center space-x-2">
                              <img
                                class="h-11 w-11 rounded-full"
                                alt={`@${user.name}`}
                                src={`/~${user.name}/profile.png`}
                              />
                              <span class="rounded-lg bg-background p-1 pl-2 pr-2">
                                {user.name}
                              </span>
                              <br />
                            </div>
                          </a>
                        );
                      } else {
                        return (
                          <a class="text-white no-underline" href={`/~${user.name}`}>
                            <span>{user.name},</span>
                          </a>
                        );
                      }
                    })
                  : detailed.author?.name
              }
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>

<style is:global>
  a {
    @apply text-blue-500 no-underline hover:underline;
  }

  img {
    @apply max-w-full rounded;
  }

  pre {
    @apply rounded bg-background p-2;
  }

  pre code {
    @apply w-full overflow-x-auto whitespace-pre-wrap font-code text-sm/6;
  }

  code {
    @apply rounded bg-background p-1 text-sm;
  }

  /* Code Block */
  pre code span {
    @apply font-code;
  }

  .hljs-keyword {
    @apply text-purple-400;
  }

  .hljs-built_in,
  .hljs-title {
    @apply text-blue-400;
  }

  .hljs-string {
    @apply text-green-400;
  }

  .hljs-variable {
    @apply text-white;
  }

  .hljs-params {
    @apply text-red-400;
  }

  .hljs-property {
    @apply text-blue-300;
  }

  .hljs-comment {
    @apply text-opacity-95;
  }

  .hljs-name {
    @apply text-orange-400;
  }

  .hljs-attr {
    @apply text-sky-200;
  }
</style>
