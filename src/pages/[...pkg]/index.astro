---
import Layout from "../../layouts/Layout.astro";
import PackageCard from "../../components/PackageCard.astro";
import PackageDownloads from "../../components/PackageDownloads.tsx";
import IconLicense from "../../components/icons/License.astro";
import IconUser from "../../components/icons/User.astro";
import IconNode from "../../components/icons/Node.astro";
import type { PackageGeneral, PackageDetailed } from "../../types/Package.ts";
import { md } from "../../utils/markdown.ts";

interface Props {
  pkg: string;
}

const { pkg } = Astro.params;
const tab = Astro.url.searchParams.get("tab") || "1";

// Get Version or use latest
let version = "latest";
const list = pkg?.split("/") as string[];

list.forEach((e) => {
  if (/^v\d+./.test(e)) {
    version = e.substring(1);
  }
});

const packageName = pkg?.replace(`/v${version}`, "");
const [general, detailed] = await Promise.all([
  fetch(`https://registry.npmjs.com/${packageName}`).then(
    (res) => res.json() as Promise<PackageGeneral>,
  ),
  fetch(`https://registry.npmjs.com/${packageName}/${version}`).then(
    (res) => res.json() as Promise<PackageDetailed>,
  ),
]);

if (general.error) return Astro.redirect("/-/404");

let readme = general.readme;

// Get Readme from GitHub
if (!general.readme) {
  if (general.repository?.type !== "git") return;

  const url = general.repository.url.replace("git+", "").replace("ssh://git@", "");
  const repo = url.split("github.com/")[1].replace(".git", "");

  const data = await fetch(`https://raw.githubusercontent.com/${repo}/main/README.md`).then((res) =>
    res.text(),
  );

  readme = data;
}
---

<Layout title={pkg || "Unknow"} description={detailed.description}>
  <main class="overflow-x-hidden p-3">
    <PackageCard
      name={detailed.name}
      description={detailed.description}
      version={detailed.version}
      keywords={detailed.keywords || []}
    />

    <br />

    <div class="space-y-3 md:flex md:space-x-3">
      <div class="md:w-3/4">
        <div class="flex items-center space-x-3 rounded-t-2xl bg-surface p-3">
          <a
            href={`/${pkg}`}
            class={`font-bold bg-background p-2 pl-4 pr-4 rounded-xl ${
              tab === "1" ? "text-purple-400" : "text-white"
            }`}>Readme</a
          >
          <a
            href={`/${pkg}?tab=2`}
            class={`font-bold bg-background p-2 pl-4 pr-4 rounded-xl ${
              tab === "2" ? "text-purple-400" : "text-white"
            }`}>Version</a
          >
          <a
            href={`/${pkg}?tab=3`}
            class={`font-bold bg-background p-2 pl-4 pr-4 rounded-xl ${
              tab === "3" ? "text-purple-400" : "text-white"
            }`}>Dependencies</a
          >
        </div>

        {
          tab === "1" ? (
            <div class="max-w-full rounded-b-2xl bg-surface p-3" set:html={md.parse(readme)} />
          ) : tab === "2" ? (
            <div class="grid grid-cols-6 gap-4 rounded-b-2xl bg-surface p-3">
              {Object.keys(general.versions)
                .reverse()
                .map((key: string) => {
                  return (
                    <a
                      href={`/${detailed.name}/v${key}`}
                      class="rounded-lg bg-background p-1 pl-2 pr-2 text-center text-lg text-white no-underline"
                    >
                      {key}
                    </a>
                  );
                })}
            </div>
          ) : (
            <div class="break-words rounded-b-2xl bg-surface p-3">
              <h1 class="text-lg font-bold">Dependencies</h1>
              <div>
                {Object.keys(detailed.dependencies || {}).map((key) => {
                  return <span class="rounded-lg bg-background p-1 pl-2 pr-2 text-lg">{key}</span>;
                })}
              </div>

              <h1 class="text-lg font-bold">Dev dependencies</h1>
              <div class="space-x-2">
                {Object.keys(detailed.devDependencies || {}).map((key) => {
                  return <span class="rounded-lg bg-background p-1 pl-2 pr-2 text-lg">{key}</span>;
                }) || "No dev dependencies"}
              </div>
            </div>
          )
        }
      </div>

      <div class="rounded-2xl bg-surface pb-2 pl-4 pr-4 pt-2 md:w-1/4">
        <div>
          <h2>Install</h2>
          <code class="rounded-lg border bg-background p-2 pl-5 pr-5">
            npm i {detailed.name}{version !== "latest" ? `@${version}` : ""}
          </code>
        </div>
        <div>
          <h2>Metadata</h2>
          <ul class="space-y-2 pl-2">
            <li class="flex items-center space-x-2">
              <IconLicense />
              <a
                href={`https://directory.fsf.org/wiki/License:${detailed.license || "Unknown"}`}
                class="text-white no-underline"
              >
                <span class="rounded-lg bg-background p-1 pl-2 pr-2">
                  {detailed.license || "Unknown"}
                </span>
              </a>
            </li>

            <li class="flex items-center space-x-2">
              <IconNode />
              <span class="rounded-lg bg-background p-1 pl-2 pr-2">
                {detailed.engines ? detailed.engines.node || "Whatever" : "Whatever"}
              </span>
            </li>

            <li class="flex items-center space-x-2">
              <IconUser />
              <span class="rounded-lg bg-background p-1 pl-2 pr-2">
                {detailed.author?.name || "Unknown"}
              </span>
            </li>
          </ul>
        </div>
        <div>
          <h2>Downloads</h2>
          <PackageDownloads client:only name={detailed.name} />
          <noscript>
            <a href={`/${pkg}/downloads`}>Downloads Tab Here</a>
          </noscript>
        </div>
        <div>
          <h2>Maintainers</h2>
          <div>
            {
              detailed.maintainers
                ? detailed.maintainers.map((user) => {
                    const m = detailed.maintainers?.length;

                    if (m && m < 11) {
                      return (
                        <a class="text-white no-underline" href={`/~${user.name}`}>
                          <div class="mb-2 flex items-center space-x-2">
                            <img
                              class="h-10 w-10 rounded-full"
                              src={`/~${user.name}/profile.png`}
                            />
                            <span class="rounded-lg bg-background p-1 pl-2 pr-2">{user.name}</span>
                            <br />
                          </div>
                        </a>
                      );
                    } else {
                      return (
                        <a class="text-white no-underline" href={`/~${user.name}`}>
                          <span>{user.name},</span>
                        </a>
                      );
                    }
                  })
                : detailed.author?.name
            }
          </div>
        </div>
      </div>
    </div>

    <style is:global>
      a {
        @apply text-blue-600 no-underline hover:underline;
      }

      img {
        @apply max-w-full rounded;
      }

      pre {
        @apply rounded bg-background p-2;
      }

      pre code {
        @apply w-full overflow-x-scroll font-code;
      }

      code {
        @apply rounded bg-background text-sm;
      }

      /* Code Block */
      pre code span {
        @apply font-code;
      }

      .hljs-keyword {
        @apply text-purple-400;
      }

      .hljs-built_in,
      .hljs-title {
        @apply text-blue-400;
      }

      .hljs-string {
        @apply text-green-400;
      }

      .hljs-variable {
        @apply text-white;
      }

      .hljs-params {
        @apply text-red-400;
      }

      .hljs-property {
        @apply text-blue-300;
      }

      .hljs-comment {
        @apply text-opacity-95;
      }

      .hljs-name {
        @apply text-orange-400;
      }

      .hljs-attr {
        @apply text-sky-200;
      }
    </style>
  </main>
</Layout>
